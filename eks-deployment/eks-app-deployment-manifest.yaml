---
apiVersion: v1
kind: Namespace
metadata:
  name: movie-application

---
# MySQL Secret
apiVersion: v1
kind: Secret
metadata:
  name: mysql-pass
  namespace: movie-application
type: Opaque
stringData:
  mysql-root-password: root
  mysql-user-password: root

---
# MySQL ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: movie-application
data:
  MYSQL_DATABASE: sakila
  MYSQL_USER: root

---
# MySQL PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: movie-application
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2

---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: movie-application
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_DATABASE
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc

---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: movie-application
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
  clusterIP: None  # headless service for stable DNS

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-backend
  namespace: movie-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-backend
  template:
    metadata:
      labels:
        app: movie-backend
    spec:
      containers:
        - name: backend
          image: rahindev/movie-service:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql.movie-application.svc.cluster.local:3306/sakila?useSSL=false"
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: mysql-root-password
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: movie-backend-service
  namespace: movie-application
spec:
  type: ClusterIP
  selector:
    app: movie-backend
  ports:
    - port: 8080
      targetPort: 8080

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-frontend
  namespace: movie-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-frontend
  template:
    metadata:
      labels:
        app: movie-frontend
    spec:
      containers:
        - name: frontend
          image: rahindev/movie-frontend:latest
          ports:
            - containerPort: 4200
          env:
            - name: BACKEND_API_URL
              value: "http://movie-backend-service.movie-application.svc.cluster.local:8080"
          livenessProbe:
            httpGet:
              path: /
              port: 4200
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: 4200
            initialDelaySeconds: 5
            periodSeconds: 10

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: movie-frontend-service
  namespace: movie-application
spec:
  type: LoadBalancer
  selector:
    app: movie-frontend
  ports:
    - port: 80
      targetPort: 4200
